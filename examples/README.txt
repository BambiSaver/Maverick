In each subfolder there is an example project for the software Maverick.

Each example is organised in 4 subfolders as follows:

    - maple: folder with the Maple worksheet where the optimal control problem (OCP) is defined (states, controls, dynamics equations, constraints, target, parameters, etc..).
             The worksheet make use the of the 'Maverick' maple library to generate the C++ code of the problem. In these examples, the source code is generated in the subfolder 'sources'.



    - data: folder where the lua data files are located. Every maverick executable read a lua files where the OCP parameters numeric value are explicited.
            A lua data file not only contains the numerical value of the OCP parameters, but also:
                - defines the mesh to use in the OCP
                - defines the external functions (if used by the OCP)
                - defines the scaling for the OCP (VERY IMPORTANT)
                - defines the settings used by the solver

            See the lua data file examples in the data folder to understand how to use the lua data file.



    - sources: folder where the C++ source code generated by the Maple worksheet are located. In order to build an executable, you must (after having executed the Maple worksheet) run the script 'compile.sh'. It generates an executable with the same name of the OCP problem.
               To run the OCP, you must execute from a shell the command: './myproblem path_to_lua_data_file', where 'myproblem' is the name of the executable, and 'path_to_lua_data_file' is the path to the lua data file of the problem. If no lua data file is specified, by default the file './data.lua' is assumed. E.g., you can run the GoddardRocket example by executing the command './GoddardRocket ../data/data_auto_mesh.lua' in a shell (from within the sources folder)

               It is possible to make the Maple worksheet to generate the source files in a different location (see the Maple worksheet).



    - results: folder where the OCP result data files are saved. You can change the name of the folder where the result data file are saved by changing the lua data file.
